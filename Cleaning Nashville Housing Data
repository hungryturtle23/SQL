Worked with Nashville housing data to show an example of cleaning data to make it usable

SELECT TOP (1000) [UniqueID ]
      ,[ParcelID]
      ,[LandUse]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[Acreage]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
      ,[SaleDateConverted]
      ,[PropertySplitAddress]
      ,[PropertySplitCity]
      ,[OwnerSplitAddress]
      ,[OwnerSplitCity]
      ,[OwnerSplitState]
  FROM [Portfolio Project].[dbo].[NashvilleHousing]


SELECT *
FROM [Portfolio Project].[dbo].[NashvilleHousing];

-- Standardize Date Format

Select [SaleDate], Convert(Date,[SaleDate])
FROM[Portfolio Project].[dbo].[NashvilleHousing]

Update [NashvilleHousing]
SET SaleDate = Convert(Date,[SaleDate])

Update NashvilleHousing
SET SaleDateConverted = Convert(date,[SaleDate])


-- Populate Property Address 


SELECT *
FROM [Portfolio Project].[dbo].[NashvilleHousing]
-- PropertyAddress is null
ORDER BY ParcelID;


-- Using a self join so we can connect the data source with itself 
-- to get the property ID's to match if their is a null value

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM [Portfolio Project].[dbo].[NashvilleHousing] a
JOIN [Portfolio Project].[dbo].[NashvilleHousing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID]
Where a.PropertyAddress is null



Update a
SET [PropertyAddress] = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM [Portfolio Project].[dbo].[NashvilleHousing] a
JOIN [Portfolio Project].[dbo].[NashvilleHousing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


-- Breaking out Address into Individual Columns (Address,City,State)


Select PropertyAddress
FROM [Portfolio Project].[dbo].[NashvilleHousing]


-- using a substring, and character index -- 

SELECT
SUBSTRING([PropertyAddress], 1,CHARINDEX(',',[PropertyAddress]) -1) as Address
, SUBSTRING([PropertyAddress], CHARINDEX(',', [PropertyAddress]) +1, Len([PropertyAddress]))  as Address 
FROM [Portfolio Project].[dbo].[NashvilleHousing]

ALTER TABLE [NashvilleHousing]
ADD [PropertySplitAddress] Nvarchar(255);

Update [NashvilleHousing]
Set [PropertySplitAddress] = SUBSTRING([PropertyAddress], 1,CHARINDEX(',',[PropertyAddress]) -1)

ALTER TABLE [NashvilleHousing]
ADD [PropertySplitCity] Nvarchar(255);

Update [NashvilleHousing]
Set [PropertySplitCity] = SUBSTRING([PropertyAddress], CHARINDEX(',', [PropertyAddress]) +1, Len([PropertyAddress]));

SELECT OwnerAddress
FROM [Portfolio Project].[dbo].[NashvilleHousing]

SELECT 
PARSENAME(REPLACE(OwnerAddress,',', '.'), 3)
,PARSENAME(REPLACE(OwnerAddress,',', '.'), 2)
,PARSENAME(REPLACE(OwnerAddress,',', '.'), 1)
FROM [Portfolio Project].[dbo].[NashvilleHousing]





ALTER TABLE [NashvilleHousing]
ADD [OwnerSplitAddress] Nvarchar(255);

Update [NashvilleHousing]
Set [OwnerSplitAddress] = PARSENAME(REPLACE(OwnerAddress,',', '.'), 3)

ALTER TABLE [NashvilleHousing]
ADD [OwnerSplitCity] Nvarchar(255);

Update [NashvilleHousing]
Set [OwnerSplitCity] = PARSENAME(REPLACE(OwnerAddress,',', '.'), 2)


ALTER TABLE [NashvilleHousing]
ADD [OwnerSplitState] Nvarchar(255);

Update [NashvilleHousing]
Set [OwnerSplitState] = PARSENAME(REPLACE(OwnerAddress,',', '.'), 1)



-- Change Y and N to Yes and No in "Sold as Vacant" field

SELECT DISTINCT(SoldAsVacant),count(SoldAsVacant)
FROM [Portfolio Project].[dbo].NashvilleHousing
GROUP BY SoldAsVacant
Order by 2


SELECT SoldAsVacant
, Case WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
		End
FROM [Portfolio Project].[dbo].NashvilleHousing


UPDATE [NashvilleHousing]
SET SoldAsVacant = Case WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
		END

-- Remove Duplicates 

WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate
				 LegalReference
				 ORDER BY 
				   UniqueID
				   ) row_num
FROM [Portfolio Project].[dbo].NashvilleHousing

SELECT *
FROM RowNumCTE
WHERE row_num >1
ORDER BY ProperyAddress



-- Delete Unused Columns

SELECT *
FROM [Portfolio Project].[dbo].[NashvilleHousing]

--ALTER TABLE [Portfolio Project].[dbo].[NashvilleHousing]--
--DROP COLUMN SaleDate, OwnderAddress,TaxDistrict,PropertyAddress--


